{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\Task_Development\\\\frontend\\\\src\\\\components\\\\ModalWrapper.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst form = ({\n  isOpen,\n  toggle,\n  buildings,\n  setBuildings,\n  setCount,\n  selectedRow,\n  updateListingData\n}) => {\n  const handleEditBuilding = async () => {\n    try {\n      const editedBuilding = {\n        build_id: selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.build_id,\n        build_name: name,\n        build_status: status\n      };\n      const response = await editBuilding(editedBuilding);\n      if (response && response.status === \"success\") {\n        toast.success(t(\"buildings.validation.edit_msg\"));\n        updateListingData(editedBuilding);\n        toggle();\n      } else {\n        toast.error(t(\"buildings.validation.err_edit\"));\n      }\n    } catch (error) {\n      if (error.name === \"ValidationError\") {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setValidationErrors(errors);\n      }\n    }\n  };\n  const handleAction = selectedRow ? handleEditBuilding : handleAddBuilding;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\nexport default ModalWrapper;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","form","isOpen","toggle","buildings","setBuildings","setCount","selectedRow","updateListingData","handleEditBuilding","editedBuilding","build_id","build_name","name","build_status","status","response","editBuilding","toast","success","t","error","errors","inner","forEach","e","path","message","setValidationErrors","handleAction","handleAddBuilding","children","fileName","_jsxFileName","lineNumber","columnNumber","ModalWrapper"],"sources":["D:/Task/Task_Development/frontend/src/components/ModalWrapper.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst form = ({\r\n    isOpen,\r\n    toggle,\r\n    buildings,\r\n    setBuildings,\r\n    setCount,\r\n    selectedRow,\r\n    updateListingData,\r\n  }) => {\r\n\r\n\r\n\r\n\r\n    const handleEditBuilding = async () => {\r\n        try {\r\n      \r\n          const editedBuilding = {\r\n            build_id: selectedRow?.build_id,\r\n            build_name: name,\r\n            build_status: status,\r\n          };\r\n    \r\n          const response = await editBuilding(editedBuilding);\r\n    \r\n          if (response && response.status === \"success\") {\r\n            toast.success(t(\"buildings.validation.edit_msg\"));\r\n            updateListingData(editedBuilding);\r\n            toggle();\r\n          } else {\r\n            toast.error(t(\"buildings.validation.err_edit\"));\r\n          }\r\n        } catch (error) {\r\n          if (error.name === \"ValidationError\") {\r\n            const errors = {};\r\n            error.inner.forEach((e) => {\r\n              errors[e.path] = e.message;\r\n            });\r\n            setValidationErrors(errors);\r\n          }\r\n        }\r\n      };\r\n      \r\n\r\n      \r\n\r\n\r\n\r\n\r\n    const handleAction = selectedRow ? handleEditBuilding : handleAddBuilding;\r\n  \r\n\r\n  return (\r\n    <div>form</div>\r\n  )\r\n}\r\n\r\nexport default ModalWrapper"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAC;EACVC,MAAM;EACNC,MAAM;EACNC,SAAS;EACTC,YAAY;EACZC,QAAQ;EACRC,WAAW;EACXC;AACF,CAAC,KAAK;EAKJ,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MAEF,MAAMC,cAAc,GAAG;QACrBC,QAAQ,EAAEJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,QAAQ;QAC/BC,UAAU,EAAEC,IAAI;QAChBC,YAAY,EAAEC;MAChB,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAACP,cAAc,CAAC;MAEnD,IAAIM,QAAQ,IAAIA,QAAQ,CAACD,MAAM,KAAK,SAAS,EAAE;QAC7CG,KAAK,CAACC,OAAO,CAACC,CAAC,CAAC,+BAA+B,CAAC,CAAC;QACjDZ,iBAAiB,CAACE,cAAc,CAAC;QACjCP,MAAM,CAAC,CAAC;MACV,CAAC,MAAM;QACLe,KAAK,CAACG,KAAK,CAACD,CAAC,CAAC,+BAA+B,CAAC,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACR,IAAI,KAAK,iBAAiB,EAAE;QACpC,MAAMS,MAAM,GAAG,CAAC,CAAC;QACjBD,KAAK,CAACE,KAAK,CAACC,OAAO,CAAEC,CAAC,IAAK;UACzBH,MAAM,CAACG,CAAC,CAACC,IAAI,CAAC,GAAGD,CAAC,CAACE,OAAO;QAC5B,CAAC,CAAC;QACFC,mBAAmB,CAACN,MAAM,CAAC;MAC7B;IACF;EACF,CAAC;EAQH,MAAMO,YAAY,GAAGtB,WAAW,GAAGE,kBAAkB,GAAGqB,iBAAiB;EAG3E,oBACE9B,OAAA;IAAA+B,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEnB,CAAC;AAED,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
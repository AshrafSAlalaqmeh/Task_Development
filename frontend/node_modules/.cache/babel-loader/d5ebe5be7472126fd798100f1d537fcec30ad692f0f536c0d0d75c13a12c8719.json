{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\Task_Development\\\\frontend\\\\src\\\\pages\\\\products\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { getProduct } from \"../../services/products\";\nimport { Button, Card, CardContent, Typography } from \"@mui/material\";\nimport form from \"../../components/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchData();\n    return () => null;\n    // eslint-disable-next-line\n  }, []);\n  let product_id;\n  let price;\n  let category;\n  let availability_status;\n  const fetchData = async () => {\n    var _data$message;\n    const data = await getProduct({\n      product_id,\n      price,\n      category,\n      availability_status\n    });\n    setProducts(data === null || data === void 0 ? void 0 : (_data$message = data.message) === null || _data$message === void 0 ? void 0 : _data$message.items_list);\n    console.log(\"XXXXXXXXXXXXXXXXXx\", data);\n  };\n  console.log(\"products\", products);\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const addBuilding = () => {\n    setSelectedRow(null);\n    handleToggle();\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: addBuilding,\n      className: \"mb-3 mt-3 align-self-center\",\n      children: \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), (products === null || products === void 0 ? void 0 : products.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : products.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"600px\",\n        // Set a fixed width for each card\n        flexGrow: 1,\n        margin: \"10px\" // Allow cards to grow within the flex container\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: item.availability_status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Delete Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, item.product_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)), isOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n      isOpen: isOpen,\n      toggle: handleToggle,\n      buildings: buildings,\n      setBuildings: setBuildings,\n      setCount: setCount,\n      selectedRow: selectedRow,\n      updateListingData: updateListingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"AZFQGqPuRfZ6k79co6l2++7+kRk=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","getProduct","Button","Card","CardContent","Typography","form","jsxDEV","_jsxDEV","Product","_s","products","setProducts","isOpen","setIsOpen","fetchData","product_id","price","category","availability_status","_data$message","data","message","items_list","console","log","handleToggle","addBuilding","setSelectedRow","children","variant","color","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","style","width","flexGrow","margin","component","name","description","toggle","buildings","setBuildings","setCount","selectedRow","updateListingData","_c","$RefreshReg$"],"sources":["D:/Task/Task_Development/frontend/src/pages/products/index.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { getProduct } from \"../../services/products\";\r\nimport { Button, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport form from \"../../components/form\";\r\n\r\nconst Product = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    return () => null;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  let product_id;\r\n  let price;\r\n  let category;\r\n  let availability_status;\r\n\r\n  const fetchData = async () => {\r\n    const data = await getProduct({\r\n      product_id,\r\n      price,\r\n      category,\r\n      availability_status,\r\n    });\r\n\r\n    setProducts(data?.message?.items_list);\r\n    console.log(\"XXXXXXXXXXXXXXXXXx\", data);\r\n  };\r\n  console.log(\"products\", products);\r\n\r\n\r\n\r\n\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const addBuilding = () => {\r\n    setSelectedRow(null);\r\n    handleToggle();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Card> */}\r\n      {/* <CardContent> */}\r\n          <Button variant=\"contained\" color=\"primary\"\r\n          onClick={addBuilding}\r\n              className=\"mb-3 mt-3 align-self-center\"\r\n          >\r\n            Add Product\r\n          </Button>\r\n      {products?.length === 0 ? (\r\n        <div>no result</div>\r\n      ) : (\r\n        products.map((item) => (\r\n          <Card\r\n            key={item.product_id}\r\n            style={{\r\n              width: \"600px\", // Set a fixed width for each card\r\n              flexGrow: 1,\r\n              margin: \"10px\", // Allow cards to grow within the flex container\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                {item.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\">{item.category}</Typography>\r\n              <Typography variant=\"body2\">{item.description}</Typography>\r\n              <Typography variant=\"body2\">{item.price}</Typography>\r\n              <Typography variant=\"body2\">\r\n                {item.availability_status}\r\n              </Typography>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Update Product\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\">\r\n                Delete Product\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        ))\r\n      )}\r\n      {/* </CardContent> */}\r\n      {/* </Card> */}\r\n      {isOpen && (\r\n        <form\r\n          isOpen={isOpen}\r\n          toggle={handleToggle}\r\n          buildings={buildings}\r\n          setBuildings={setBuildings}\r\n          setCount={setCount}\r\n          selectedRow={selectedRow}\r\n          updateListingData={updateListingData}\r\n        />\r\n      )}\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}